# Generated by Django 4.2.16 on 2024-12-22 18:34

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import django_countries.fields
from django.contrib.auth.models import User

def migrate_user_data(apps, schema_editor):
    # Get the models
    CustomUser = apps.get_model('web', 'CustomUser')
    default_status = 0  # USER_STATUS_UNCONFIRMED

    # Migrate data from the old User model to the new CustomUser model
    for user in User.objects.all():
        CustomUser.objects.create(
            id=user.id,  # Ensure IDs match to maintain references
            username=user.username,
            first_name=user.first_name,
            last_name=user.last_name,
            email=user.email,
            is_staff=user.is_staff,
            is_active=user.is_active,
            date_joined=user.date_joined,
            last_login=user.last_login,

            # Add default or placeholder data for custom fields
            horsey=0,
            subscribed=None,
            unsubscribed=None,
            country=None,
            sex=None,
            age_range=None,
            status=default_status,
        )

def reverse_migration(apps, schema_editor):
    # Reverse data migration (optional but recommended)
    CustomUser = apps.get_model('web', 'CustomUser')
    User = apps.get_model('auth', 'User')
    for custom_user in CustomUser.objects.all():
        User.objects.create(
            id=custom_user.id,
            username=custom_user.username,
            first_name=custom_user.first_name,
            last_name=custom_user.last_name,
            email=custom_user.email,
            is_staff=custom_user.is_staff,
            is_active=custom_user.is_active,
            date_joined=custom_user.date_joined,
            last_login=custom_user.last_login,
        )


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('web', '0023_statue_display_image'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('horsey', models.IntegerField(default=0, verbose_name='Do you consider yourself a horse person')),
                ('subscribed', models.DateTimeField(blank=True, null=True)),
                ('unsubscribed', models.DateTimeField(blank=True, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, help_text='Country that you grew up in or best represents your culture', max_length=2, null=True)),
                ('sex', models.CharField(blank=True, max_length=1, null=True)),
                ('age_range', models.CharField(blank=True, max_length=2, null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Not Applicable'), (3, 'Unconfirmed'), (4, 'Confirmed'), (5, 'Trial'), (7, 'Subscribed'), (8, 'Trial Lapsed'), (9, 'Subscription Lapsed')], default=3)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RunPython(migrate_user_data, reverse_migration),
    ]
